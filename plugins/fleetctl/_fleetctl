#compdef fleetctl

# FleetCtl autocompletion for oh-my-zsh
# Requires: fleetctl installed
# Author: JeremyW (@dudymas) , using the docker plugin for inspiration ( thanks, @aeonazaan and folks! )


# ----- Helper functions

# Output a selectable list of all fleet machines
__fleetctl_machines() {
    declare -a mach_cmd
    mach_cmd=($(fleetctl list-machines | awk 'NR>1{print $1":[CON("$1")"$2"("$3")]"}'))
    _describe 'machines' mach_cmd
}

# Output a selectable list of all fleet units
__fleetctl_units() {
    declare -a units_cmd
    units_cmd=($(fleetctl list-units | awk 'NR>1{print $1":("$1")"$2"("$3")"}'))
    _describe 'units' units_cmd
}

# Output a selectable list of all fleet units
__fleetctl_unit_files() {
    declare -a unit_files_cmd
    unit_files_cmd=($(fleetctl list-unit-files | awk 'NR>1{print $1":[CON("$1")"$2"("$3")]"}'))
    _describe 'unit files' unit_files_cmd
}

# ----- Commands
# Seperate function for each command, makes extension easier later
# ---------------------------

__cat() {
    __fleetctl_units
}

# end commands -------
# --------------------

local -a _1st_arguments
_1st_arguments=(
    "cat":"Output the contents of a submitted unit"
)

_arguments '*:: :->command'

if (( CURRENT == 1 )); then
    _describe -t commands "fleetctl command" _1st_arguments
    return
fi

local -a _command_args
case "$words[1]" in
    cat)
        __cat ;;
esac
